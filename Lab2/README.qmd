# Сбор и аналитическая обработка информации о сетевом трафике

## Цель работы

1. Развить практические навыки использования современного стека инструментов сбора и аналитической обработки информации о сетвом трафике
2. Освоить базовые подходы блокировки нежелательного сетевого трафика
3. Закрепить знания о современных сетевых протоколах прикладного уровня

## ️Исходные данные

1. Ноутбук с Windows 10 Pro
2. Virtual Box с ОС Linux kali 6.1.0-kali5-amd64
3. Сетевой анализатор - Wireshark
4. Python 3.11.2

## ️Задание

1. Собрать сетевой трафик (объемом не менее 100 Мб)
2. Выделить метаинформацию сетевого трафика с помощью утилиты Zeek
3. Собрать данные об источниках нежелательного трафика, например – https://github.com/StevenBlack
4. Написать программу на любом удобном языке (python, bash, R …), котрая подсчитывает процент нежелательного трафика в собранном на этапе 1.
5. Оформить отчет в соответствии с шаблоном

## Содержание ЛР

### Шаг 1

Собрать сетевой трафик (объемом не менее 100 Мб)

1. Воспользоваться сетевым анализатором – Wireshark
2. Для формирования необходимого объема, после начала записи трафика посерфить Интернет: поискать в поисковых движках, полазить по новостям и т.д. Не рекомендуется формировать весь объем трафика за счет использования одним сервисом – Telegram, Youtube, TikTok и пр. – так как собранный
сетевой профиль будет без характерных черт, которые можно будет затем отобразить и проанализировать на последующих этапах.
![image](https://user-images.githubusercontent.com/87996224/226763576-d4f7dc9c-b28c-4cce-a685-4b042d4df125.png)

### Шаг 2

Выделить метаинформацию сетевого трафика с помощью утилиты Zeek:
zeek –C –r traffic.pcapng

Вычленить адреса из dns.log:
awk '/^[^#]/ {print $10}' dns.log >> dns

Полученные файлы:

![image](https://user-images.githubusercontent.com/87996224/226763979-2f4ecb38-0297-4d9b-ae5d-73fa04385d2b.png)

### Шаг 3

Собрать данные об источниках нежелательного трафика, в данном случае с github – https://github.com/StevenBlack

С репозитория взяты несколько файлов hosts и объединены в один с помощью команды cat hosts2 >> hosts

Извлечение адресов из hosts:
cat hosts | cut -d " " -f2 >> hosts

### Шаг 4

Написать программу на языке Python 3.11.2, которая подсчитывает процент
нежелательного трафика в собранном на этапе 1:

Код:
```
def main():
	with open('dns_filtered', 'r') as fdns, open('hosts_filtered', 'r') as fhosts:
		dns_lines = fdns.readlines()		
		dns_l = [x for x in dns_lines if x.strip() and x.strip() != "-"]

		hosts_lines = fhosts.readlines()
		hosts_l = [x for x in hosts_lines if x.strip() and x.strip() != "-" and x.strip() != "#"]

		dns_set = set(dns_l)
		hosts_set = set(hosts_l)

		common_lines = dns_set.intersection(hosts_set)

	print(f"Общее количество строк в файле с dns: {len(dns_l)}")
	print(f"Количество строк, которые есть в обоих файлах: {len(common_lines)}")
	print(f"Процент нежелательного трафика: {round(len(common_lines) / len(dns_l) * 100, 2)}%")

if __name__ == "__main__":
	main()

```

## ️Оценка результата

Собрано 94.6 Мб трафика.

Собрано данные об источниках нежелательного трафика.

Проведено их сравнение, найдены нежелательные dns адреса.

Подсчитан процент нежелательного трафика.

Получены результаты:
![image](https://user-images.githubusercontent.com/87996224/226764906-ca7c5ed3-761b-4780-b11c-2ca9274573aa.png)

## ️Вывод 

В результате выполнения лабораторной работы были изучены инструменты сетевого анализа, извлечение необходимой информации о dns адресах с помощью Zeek, а также проведено сравнение и анализ нежелательного трафика.
